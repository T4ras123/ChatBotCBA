from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, CallbackQuery
import logging

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —è–∑—ã–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
user_languages = {}

# –¢–µ–∫—Å—Ç—ã —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —è–∑—ã–∫–∞
notifications = {
    "hy": "‘¥’∏÷Ç÷Ñ ’®’∂’ø÷Ä’•’¨ ’•÷Ñ ’∞’°’µ’•÷Ä’•’∂’®÷â ’Ä’°’¥’°’Ø’°÷Ä’£’´ ’¢’∏’¨’∏÷Ä ’Æ’°’∂’∏÷Ç÷Å’∏÷Ç’¥’∂’•÷Ä’® ’Ø’∏÷Ç’≤’°÷Ä’Ø’æ’•’∂ ’°’µ’Ω ’¨’•’¶’æ’∏’æ÷â",
    "ru": "–í—ã –≤—ã–±—Ä–∞–ª–∏ —Ä—É—Å—Å–∫–∏–π —è–∑—ã–∫. –í—Å–µ —Å–∏—Å—Ç–µ–º–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –±—É–¥—É—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å—Å—è –Ω–∞ —ç—Ç–æ–º —è–∑—ã–∫–µ.",
    "en": "You have chosen English. All system notifications will be sent in this language."
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –≤—ã–±–æ—Ä–∞ —è–∑—ã–∫–∞
def create_language_keyboard():
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="’Ä’°’µ’•÷Ä’•’∂ üá¶üá≤", callback_data="lang_arm")],
        [InlineKeyboardButton(text="–†—É—Å—Å–∫–∏–π üá∑üá∫", callback_data="lang_rus")],
        [InlineKeyboardButton(text="English üá∫üá∏", callback_data="lang_eng")]
    ])
    return keyboard

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –∫–Ω–æ–ø–∫–∏
async def handle_language_selection(callback: CallbackQuery):
    user_id = callback.from_user.id
    data = callback.data

    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π —è–∑—ã–∫
    if data == "lang_arm":
        user_languages[user_id] = "hy"
    elif data == "lang_rus":
        user_languages[user_id] = "ru"
    elif data == "lang_eng":
        user_languages[user_id] = "en"
    else:
        logging.warning(f"–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è callback_data: {data}")
        return

    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –Ω–∞ –≤—ã–±—Ä–∞–Ω–Ω–æ–º —è–∑—ã–∫–µ
    selected_language_code = user_languages[user_id]
    notification_text = notifications.get(selected_language_code, notifications["en"])

    # –û—Ç–≤–µ—Ç –Ω–∞ –≤—ã–±–æ—Ä —è–∑—ã–∫–∞
    await callback.message.answer(notification_text)

    # –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ Telegram –æ —Ç–æ–º, —á—Ç–æ callback –æ–±—Ä–∞–±–æ—Ç–∞–Ω
    await callback.answer()

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —è–∑—ã–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –∞–Ω–≥–ª–∏–π—Å–∫–∏–π)
def get_user_language(user_id):
    return user_languages.get(user_id, "en")